{"version":3,"sources":["src/loadbar.png","src/constants.js","src/hooks.js","src/components.js","src/wg.js","src/Date.web.js","src/finance.js","src/App.js","App.js"],"names":["module","exports","apiUrl","transparentWhite","urlFromUpload","upload","id","extension","Identity","React","createContext","WgAndUsers","wg","name","description","profile_pic","header_pic","users","useWebData","path","initial","error_obj","useState","data","setData","useContext","identity","useEffect","reqInit","headers","token","console","log","res","fetch","ok","error","text","json","err","hs","interpret_cost_object","cost","amt","Number","parseFloat","amount","repayment","nr_unpaid_shares","nr_shares","single_payment","my_gain","my_share_paid","my_share","paid","am_creditor","debtor_id","creditor_id","MoneyCard","props","date","Date","added_on","toDateString","substring","user","Pressable","style","s","card","marginLeft","padding","borderRadius","onPress","View","cardBody","paddingBottom","Text","fontSize","fontWeight","flexDirection","alignItems","RoundImage","imgSize","imgUrl","color","toFixed","Betrag","isWhite","textAlign","UserMoneyCard","stat","to_recieve","to_pay","Card","title","numberOfLines","marginTop","marginRight","negative","startsWith","isnull","backgroundColor","borderColor","borderWidth","minWidth","elevation","strikethrough","textDecorationLine","cardImgC","icon","cardImgIcons","cardTitle","cardDesc","children","UserCard","bio","username","width","height","cardImgClip","styleRing","Image","source","uri","flex","StyleSheet","create","paddingTop","shadowOpacity","justifyContent","overflow","position","right","top","aspectRatio","storeWrapper","alignSelf","storePanel","paddingVertical","contactCard","margin","newsWrapper","marginHorizontal","newsContainer","headerImg","marginBottom","zIndex","bottom","left","bannerImg","minHeight","Dimensions","get","action_heading","StoreScreen","route","params","wg_url","storeP","storeW","store","ImageBackground","blurRadius","onUserPress","map","newE","DateComp","now","setDate","mode","setMode","show","setShow","onChange","event","parts","target","value","split","prevDate","currentDate","length","setFullYear","parseInt","setHours","setMinutes","setSeconds","showMode","currentMode","timestring","toTimeString","timetstring","timetzstring","getFullYear","getMonth","getDate","getHours","getMinutes","container","buttonwrapper","datebutton","createElement","type","key","ev","toString","padStart","borderRightColor","borderRightWidth","FinanceTab","createMaterialTopTabNavigator","FinanceStack","createStackNavigator","FinanceScreen","rerenderKey","setRerenderKey","rerender","Navigator","initialRouteName","Screen","rerenderHandle","component","CostDetailScreen","FinaceCostsScreen","FinanceRootScreen","login","stats","find","statt","user_id","navigation","setOptions","headerRight","sceneContainerStyle","screenOptions","tabBarIndicatorStyle","pprops","canAddEntry","StatsScreen","datasets","opacity","withShadow","Math","min","labels","statindex","is_ready","week","weeknum","i","thisstat","push","my_total_spending","total_unified_spending","i_paid","i_recieved","time_bucket","String","reverse","ScrollView","yAxisLabel","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","propsForBackgroundLines","stroke","decimalPlaces","labelColor","propsForDots","r","strokeWidth","useShadowColorFromDataset","fillShadowGradientFromOpacity","fillShadowGradientToOpacity","bezier","marginVertical","JSON","stringify","undefined","FinanceBalanceScreen","balances","set_error","loading","setLoading","method","Button","disabled","bal","balance","BalanceObject","initiator_id","balanced_on","balanceId","url","costs","pressed","paddingStart","borderTopColor","borderStartColor","android_ripple","pickerResult","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","chars","Base64","charCode","input","str","output","block","charAt","charCodeAt","Error","accept","req","setRequestHeader","resp","getResponseHeader","buffer","ctype","base64Flag","binary","slice","call","Uint8Array","forEach","b","fromCharCode","NewEntryScreen","set_loading","setName","setAmount","selUsers","setSelUsers","set_date","image","set_image","e","Object","values","amtf","keys","nr_othershares","includes","onSubmit","payload","toISOString","debtors","entries","body","filename","pop","match","exec","form","FormData","Platform","OS","blob","imageToBlob","append","goBack","TextInput","textfield","placeholder","onChangeText","keyboardType","replace","trimStart","flexWrap","selected","sel","ee","ImagePicker","quality","exif","allowsEditing","cancelled","resizeMode","borderBottomColor","borderBottomWidth","hairlineWidth","shares","setBlob","getAuthImage","receit","then","Sharing","dialogTitle","mimeType","receitSource","share","ret","ts","loadingIndicatorSource","require","onError","nativeEvent","erro","onLoad","Tab","createBottomTabNavigator","App","initialized","set_initialized","setLogin","d","jsonValue","AsyncStorage","setItem","load","getItem","wert","parse","Provider","oldLogin","saveData","NavigationContainer","Main","LoginFlow","LoginFlowStack","header","LoginFlowStart","LoginFlowChooseWGUser","LoginFlowAsUser","set_wg_url","psswd","set_psswd","password","userDict","tabBarShowLabel","HomeScreen","options","tabBarIcon","f","focused","size","headerShown","SettingScreen"],"mappings":"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","file":"static/js/app.dc552109.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadbar.7041c03b.png\";","\r\n\r\nexport const apiUrl = \"https://wg-api.kartonrad.de\"\r\n//const apiUrl = \"http://localhost:3000\"\r\n//export const transparentWhite = 'rgba(255,255,255,0.9)';\r\n\r\nexport const transparentWhite = 'rgba(255,255,255,0.8)';\r\n//export const accentColor = '#aa00ad';\r\n//export const mutedAccentColor = '#500051';\r\n\r\nexport const lightAccentColor = '#12912a';\r\nexport const accentColor = '#166b26';\r\nexport const mutedAccentColor = '#1d3522';\r\nexport const mutedlightAccentColor = '#204227';\r\n\r\n\r\n// uhhh\r\nimport React from 'react';\r\nexport function urlFromUpload(upload) {\r\n    if(upload===null) return null;\r\n    if(!upload||!upload.id||!upload.extension)\r\n        return apiUrl+\"/public/img/rejection.jpg\";\r\n    return apiUrl+\"/uploads/\"+upload.id+\".\"+upload.extension;\r\n}\r\n\r\nexport const Identity = React.createContext(false);\r\nexport const WgAndUsers = React.createContext({\r\n    wg: {\r\n        name: \"WG\",\r\n        description: \"Loading...\",\r\n        profile_pic: null,\r\n        header_pic: null\r\n    }, \r\n    users: {}\r\n});\r\n","import React from 'react';\r\nimport { apiUrl, Identity } from './constants.js';\r\n\r\nexport function useWebData(path, initial, error_obj) {\r\n    const [data, setData] = React.useState(initial);\r\n    const [identity] = React.useContext(Identity);\r\n\r\n    React.useEffect(() => {\r\n        async function hs() {\r\n            let reqInit = {};\r\n            if(identity) {\r\n                reqInit.headers = {\r\n                    \"Authorization\" : \"Bearer \"+identity.token\r\n                };\r\n            }\r\n\r\n            try {\r\n                console.log(\"Fetching \"+path);\r\n                var res = await fetch(apiUrl + path, reqInit);\r\n                if(!res.ok) {\r\n                    if (typeof error_obj !== \"undefined\")  {\r\n                        setData(error_obj);\r\n                    }\r\n                    console.error(\"Failed fetch [\"+path+\"]: TEXT=> \"+await res.text());\r\n                    return;\r\n                }\r\n\r\n                var json = await res.json();\r\n                if (typeof initial === typeof json) {\r\n                    setData(json);\r\n                    //console.log(json);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                if (typeof error_obj !== \"undefined\")  {\r\n                    setData(error_obj);\r\n                }\r\n            }\r\n        } if(path) hs();\r\n    }, [path])\r\n\r\n    return [data];\r\n}\r\n","import React from 'react';\r\nimport { Button, StyleSheet, Text, TextInput, View, Image, Pressable } from 'react-native';\r\nimport { FontAwesome5 as FontAwesome } from '@expo/vector-icons';\r\nimport { transparentWhite, urlFromUpload } from './constants.js';\r\n\r\nexport function interpret_cost_object(cost) {\r\n    let amt = Number.parseFloat(cost.amount);\r\n    let repayment_fract = (cost.nr_unpaid_shares / cost.nr_shares);\r\n    let repayment = repayment_fract * amt;\r\n    let single_payment = amt / cost.nr_shares;\r\n\r\n    let my_gain = 0;\r\n\r\n    let my_share_paid = cost.my_share.paid == true || cost.my_share.paid == null;\r\n    let am_creditor = cost.my_share.debtor_id !== null && cost.my_share.debtor_id === cost.creditor_id;\r\n    if( am_creditor ) {\r\n      my_gain += repayment;\r\n    } else {\r\n      my_gain -= my_share_paid ? 0 : single_payment;\r\n    }\r\n\r\n    return {my_gain, single_payment, amt, cost, am_creditor}\r\n}\r\n\r\nexport function MoneyCard(props) {\r\n    let cost = props.cost;\r\n    let {my_gain, single_payment, amt} = interpret_cost_object(cost);\r\n\r\n    let date = new Date(cost.added_on).toDateString().substring(4, 10);\r\n\r\n    let user = { name: \"Irgendwer\" };\r\n    if ( props.users && props.users[cost.creditor_id] ) {\r\n        user = props.users[cost.creditor_id];\r\n    }\r\n\r\n    /* \r\n        Zurückgezahlt wird insgesamt: {repayment.toFixed(2)}€{\"\\n\"}\r\n        Jeder Schuldner zahlt: {single_payment.toFixed(2)}€{\"\\n\"}\r\n        {cost.nr_shares} Beteiligte*/\r\n\r\n    return (\r\n        <Pressable style={{...s.card, marginLeft:10, padding: 8, borderRadius: 20, ...props.style}} onPress={props.onPress}>\r\n            \r\n            <View style={{...s.cardBody, paddingBottom: 0}}>\r\n                <Text style={{fontSize: 16, fontWeight: 'bold'}}>{cost.name}</Text>\r\n                <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                    <RoundImage style={{marginLeft: -25}} imgSize={30} imgUrl={urlFromUpload(user.profile_pic)}/>\r\n                    <Text style={{color: \"#6d6d6d\"}}>   {user.name} zahlte: {amt.toFixed(2)}€</Text>\r\n                </View>\r\n            </View>\r\n            <View>\r\n                <Betrag amount={my_gain} isWhite/>\r\n                <Text style={{textAlign:'right', color: \"#6d6d6d\"}}>{date}</Text>\r\n            </View>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nexport function UserMoneyCard(props) {\r\n    var user = props.user ||{};\r\n    var stat = props.stat;\r\n\r\n    let to_recieve = Number.parseFloat(stat.to_recieve);\r\n    let to_pay = Number.parseFloat(stat.to_pay);\r\n\r\n    return (\r\n        <Card {...props} imgUrl={urlFromUpload(user.profile_pic)} imgSize={50}\r\n        title={<>\r\n            <Text numberOfLines={1}>{user.name}</Text>\r\n        </>}\r\n        text={<View style={{flexDirection:\"row\"}}><Betrag amount={to_recieve} isWhite/><Text> + </Text><Betrag amount={-to_pay} isWhite/></View>}\r\n        >\r\n            <View style={{marginTop: 0, marginRight: 10}}><Text>total:</Text><Betrag amount={to_recieve-to_pay} isWhite/></View>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function Betrag(props) {\r\n    let amount = props.amount.toFixed(2);\r\n    let negative = amount.startsWith(\"-\")\r\n    let isnull = amount==\"0.00\"\r\n    if( !negative&&!isnull ) {\r\n        amount = \"+\"+amount;\r\n    }\r\n\r\n    return (<Text style={{\r\n        color:negative?\"#fc5b05\":\"#00e04e\", fontSize: 18,\r\n        fontWeight: \"bold\", textAlign: \"center\", backgroundColor: props.isWhite?\"#ffffff\":\"#f4f4f4\", borderColor: props.isWhite?\"#f4f4f4\":\"#eaeaea\", \r\n        borderWidth: 2, minWidth: 70,\r\n        borderRadius: 10, padding : 2, elevation: 1,\r\n        ...(props.strikethrough||isnull?{textDecorationLine: 'line-through', color: \"grey\"}:{})\r\n    }}>{amount}<Text style={{color:\"#c1c1c1\", fontWeight:\"normal\", fontSize: 10}}>€</Text></Text>)\r\n}\r\n\r\nexport function Card(props) {\r\n    var imgSize = props.imgSize || 65;\r\n    return (\r\n        <Pressable style={{...s.card, ...props.style}} onPress={props.onPress}>\r\n\r\n            <RoundImage style={s.cardImgC} imgSize={imgSize} imgUrl={props.imgUrl}>\r\n                {props.icon && <View style={s.cardImgIcons}>{props.icon}</View>}\r\n            </RoundImage>\r\n            \r\n            <View style={s.cardBody}>\r\n                <Text style={s.cardTitle}>{props.title}</Text>\r\n                <Text style={s.cardDesc}>{props.text}</Text>\r\n            </View>\r\n\r\n            {props.children}\r\n        </Pressable>\r\n    )\r\n}\r\n\r\nexport function UserCard(props) {\r\n    var user = props.user ||{};\r\n\r\n    return (\r\n        <Card {...props} text={user.bio} imgUrl={urlFromUpload(user.profile_pic)}\r\n        title={<>\r\n            <Text numberOfLines={1}>{user.name}</Text>\r\n            <Text style={{fontSize: 15, color: \"rgba(0, 0, 0, 0.7)\"}}>{\"\\n\"}@{user.username}</Text>\r\n        </>}></Card>\r\n    )\r\n}\r\n\r\nexport function ReviewCard(props) {\r\n    var user = props.user ||{};\r\n    const critColor = \"rgba(255, 0, 0, 0.78)\";\r\n    const posColor = \"rgba(0, 205, 14, 0.79)\";\r\n    const icon = <FontAwesome size={19} color={props.critical?critColor:posColor} name={props.critical?\"heart-broken\":\"heart\"} solid/>;\r\n\r\n    return (\r\n        <Card {...props} icon={icon} imgUrl={user.avatarUrl}\r\n        title={<>\r\n            {props.critical?\r\n                <Text style={{color:critColor, fontWeight: 'normal'}}>Nicht empfohlen</Text>:\r\n                <Text style={{color:posColor, fontWeight: 'normal'}} >Empfohlen</Text>}\r\n            <Text numberOfLines={1}>{\"\\n\"+props.title}</Text>\r\n            <Text style={{fontSize: 15, color: \"rgba(0, 0, 0, 0.7)\"}}>{\"\\n\"}{user.name} <Text style={{color: \"rgba(0, 0, 0, 0.48)\"}}>- {user.username}</Text> </Text>\r\n        </>}></Card>\r\n    )\r\n}\r\n\r\nexport function ReplyCard(props) {\r\n    var user = props.user ||{};\r\n    var icon;\r\n    var flag;\r\n    var representing = props.representing ||{};\r\n    if(props.official) {\r\n        flag = <Text style={{color:\"rgba(0, 114, 255, 1)\", fontWeight: 'normal'}}>Offizielle Antwort{\"\\n\"}</Text>;\r\n        icon = <FontAwesome size={19} color={\"rgba(0, 114, 255, 1)\"} name=\"star\" solid/>;\r\n    } else if (representing.name) {\r\n        flag = <Text style={{color:\"rgba(255, 157, 0, 1)\", fontWeight: 'normal'}}>Laden: {representing.name}{\"\\n\"}</Text>;\r\n        icon = <FontAwesome size={19} color={\"rgba(255, 157, 0, 1)\"} name=\"flag\" solid/>;\r\n    }\r\n\r\n    return (\r\n    <View style={{flexDirection: \"row\"}}>\r\n        <View style={{width: 40, justifyContent: 'center'}}>\r\n            <Text style={{fontSize:20, textAlignVertical:\"center\"}}> =&gt;</Text>\r\n        </View>\r\n        <Card {...props} style={{flex: 1}} imgUrl={user.avatarUrl}\r\n            title={<>\r\n                {flag}\r\n                <Text style={{fontSize: 15, color: \"rgba(0, 0, 0, 0.7)\"}}>{user.name} <Text style={{color: \"rgba(0, 0, 0, 0.48)\"}}>- {user.username}</Text> </Text></>}\r\n            imgSize={50}\r\n            icon={icon}\r\n        ></Card>\r\n    </View>);\r\n}\r\n\r\nexport function News(props) {\r\n    var user = props.user ||{};\r\n    return (\r\n    <View style={{borderTopWidth: 5, borderColor: \"black\", marginBottom: 20}}>\r\n        <Text style={{fontSize: 20, fontWeight: \"bold\"}}>{props.title}</Text>\r\n        <Text style={{fontSize: 15, color: \"rgba(0, 0, 0, 0.7)\", fontStyle: \"italic\"}}>by {user.name} <Text style={{color: \"rgba(0, 0, 0, 0.48)\"}}>- {user.username}</Text> </Text>\r\n        <Text style={{marginTop: 20, fontSize: 17}}>{props.text}</Text>\r\n    </View>\r\n    );\r\n}\r\n\r\nexport function RoundImage(props) {\r\n    var imgSize = props.imgSize || 65;\r\n\r\n    return (\r\n        <View style={{...props.style, width: imgSize, height: imgSize }}>\r\n            <View style={{...s.cardImgClip, ...props.styleRing}}>\r\n                <Image source={{uri: props.imgUrl }} // || \"https://www.100ita.com/blog/wp-content/uploads/2015/10/Bread-5.jpg\" \r\n                height={imgSize} style={{flex: 1}}/>\r\n            </View>\r\n            {props.children}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst s = StyleSheet.create({\r\n    card: {\r\n        borderColor: \"transparent\",\r\n        borderRadius: 75/2,\r\n       // maxHeight: 200,\r\n        flexDirection: \"row\",\r\n        backgroundColor: transparentWhite,\r\n        marginTop: 5,\r\n        marginLeft: 20,\r\n    },\r\n    cardBody: {\r\n        flex: 1,\r\n        padding: 10,\r\n        paddingTop: 5\r\n        \r\n    },\r\n    cardTitle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    cardDesc: {\r\n        fontSize: 17,\r\n        color: \"#222\",\r\n        marginTop: 10\r\n    },\r\n    cardImgC: {     \r\n        width: 65,\r\n        height: 65,\r\n        marginLeft: -20,\r\n        \r\n        shadowOpacity: 1,\r\n        marginTop: 8\r\n    },\r\n    cardImgClip: {\r\n        width: \"100%\", height: \"100%\",\r\n        justifyContent:\"center\",\r\n        backgroundColor: \"rgba(41, 50, 135, 1)\",\r\n        borderRadius: 100/2,\r\n        overflow: \"hidden\",\r\n        elevation: 7,\r\n    },\r\n    cardImgIcons: {\r\n        position: 'absolute', \r\n        borderRadius: 100,\r\n        backgroundColor: \"white\",\r\n        padding: 3,\r\n        right: 0, \r\n        top: 0,\r\n        marginTop: -3,\r\n        marginRight: -7,\r\n        aspectRatio: 1,elevation: 10\r\n    }\r\n    \r\n})","import React from 'react';\r\nimport { Button, Dimensions, Image, ImageBackground, Platform, SegmentedControlIOSComponent, StyleSheet, Text, TextInput, View } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { useWebData } from './hooks';\r\nimport { transparentWhite, apiUrl, urlFromUpload, accentColor } from './constants';\r\nimport { RoundImage, UserCard } from './components';\r\n\r\nconst s = StyleSheet.create({\r\n    storeWrapper: {\r\n        alignSelf: 'flex-start',\r\n        flexDirection: \"column\",\r\n        alignSelf: \"stretch\"\r\n    },\r\n    storePanel: {\r\n        backgroundColor: transparentWhite,\r\n        padding: 10,\r\n        paddingVertical: 30\r\n    },\r\n    contactCard: {\r\n        width: 200,\r\n        backgroundColor: transparentWhite,\r\n        borderRadius: 75/2,\r\n        padding: 20,\r\n        margin:10,\r\n        overflow: \"hidden\"\r\n    },\r\n    newsWrapper: {\r\n        marginTop: 40,\r\n        marginHorizontal: 5\r\n    },\r\n    newsContainer: {\r\n        backgroundColor: transparentWhite,\r\n\r\n    },\r\n    headerImg: {\r\n        marginBottom: -30,\r\n        zIndex: 1,\r\n        position: 'absolute',\r\n        bottom:0,\r\n        left: 0\r\n    },\r\n    bannerImg: {\r\n        flex:1, \r\n        minHeight: 200, width: Dimensions.get(\"window\").width, zIndex:1, backgroundColor: \"rgba(41, 50, 135, 1)\"\r\n    },\r\n    action_heading: {  \r\n        color: \"white\", \r\n        borderRadius: 40, \r\n        backgroundColor: accentColor, \r\n        marginBottom:5, \r\n        textAlign: \"center\", \r\n        alignSelf: \"center\",\r\n        fontSize: 20,\r\n        padding: 5\r\n    }\r\n});\r\n\r\nconst testData = { \r\n    \"id\": 1, \r\n    \"url\": \"lamako\", \r\n    \"name\": \"LAMAKO Inc.\", \r\n    \"description\": \"Wir bei LAMKAO Inc sind vom Finanzamt persönlich mit der Überwachung von Peter Düsseldorf beauftragt worden.\", \r\n    \"profile_pic\": { \"id\": 1, \"extension\": \"jpeg\", \"original_filename\": \"signal-2022-10-24-125140_009.jpeg\", \"size_kb\": 186 }, \r\n    \"header_pic\": { \"id\": 2, \"extension\": \"jpeg\", \"original_filename\": \"signal-2022-10-24-125140_002.jpeg\", \"size_kb\": 270 } \r\n};\r\n\r\n\r\n\r\nexport function StoreScreen(props) {\r\n    /*props.navigation.addListener(\"focus\", () => {\r\n        props.navigation.dangerouslyGetParent().setOptions({ tabBarVisible: false })\r\n    })\r\n    props.navigation.addListener(\"blur\", () => {\r\n        props.navigation.dangerouslyGetParent().setOptions({ tabBarVisible: true })\r\n    });*/\r\n\r\n    // store object is handed over by navigation or fetched over network\r\n    var { wg_url, wg : storeP } = (props.route.params||{});\r\n    \r\n    const [storeW] = useWebData((wg_url&&!storeP)?\"/api/wg/\"+wg_url\r\n    :(!storeP)?\"/api/my_wg\":null, {\r\n        name: \"WG\",\r\n        description: \"Loading...\",\r\n        profile_pic: null,\r\n        header_pic: null\r\n    }, {\r\n        name: \"FEHLER!!\",\r\n        description: \"Konnte auf diese WG nicht zugreifen!\"\r\n    });\r\n    console.log(store);\r\n    const store = storeP || storeW;\r\n    //const store = testData;\r\n\r\n    const [users] = useWebData((store&&store.id)?\"/api/wg/\"+store.id+\"/users\"\r\n    :(!wg_url&&!storeP)?\"/api/my_wg/users\":null \r\n    , [], [{\r\n        name: \"FEHLER!\",\r\n        username: \"Halt\",\r\n    }]);\r\n\r\n    //\"https://www.europlan-online.de/files/6af6c04bf76e70f6a3139b8934ad2fb0.jpg\"\r\n    return (\r\n        <ImageBackground\r\n            blurRadius={5}\r\n            source={{ uri: urlFromUpload(store.header_pic)}}\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\", backgroundColor: \"rgba(37, 42, 82, 1)\" }}\r\n        >\r\n            <ScrollView style={s.storeWrapper}>\r\n                <ImageBackground source={{ uri: urlFromUpload(store.header_pic) }} style={s.bannerImg} > \r\n                    <RoundImage imgSize={100} style={s.headerImg} styleRing={{borderColor: transparentWhite, borderWidth: 5}} imgUrl={urlFromUpload(store.profile_pic)}></RoundImage>\r\n                </ImageBackground>\r\n                \r\n                <View style={s.storePanel}>\r\n                    <Text style={{fontWeight: \"bold\", fontSize: 23}}>{store.name}</Text>\r\n                    <Text style={{fontSize: 17}}>{store.description}</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{...s.newsWrapper, ...props.style}}>\r\n                    { props.onUserPress?<Text style={s.action_heading}>Profil wählen:</Text>:false}\r\n\r\n                    {users.map((newE) => {\r\n                        return (\r\n                            <UserCard user={newE} key={newE.id} onPress={() => props.onUserPress?props.onUserPress(newE):\"\"}/>\r\n                        )\r\n                    })}\r\n                </View>\r\n            </ScrollView>\r\n        </ImageBackground>\r\n    );\r\n}","import { Button, ImageBackground, ScrollView, StyleSheet, Text, TextInput, View, Pressable } from 'react-native';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { lightAccentColor } from './constants';\r\n\r\nexport default function DateComp(props) { \r\n    const [date, setDate] = useState(new Date(Date.now()));\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const onChange = (event, mode) => {\r\n        let value = event.target.value;\r\n        let parts = value.split(/[^1234567890]/g);\r\n        console.log(parts);\r\n\r\n        if(mode==\"date\") {    \r\n            setDate((prevDate) => {\r\n                let currentDate = new Date(prevDate);\r\n                if(parts.length>=3)\r\n                    currentDate.setFullYear(Number.parseInt(parts[0]), Number.parseInt(parts[1]), Number.parseInt(parts[2]))\r\n\r\n                if (props.onChange) props.onChange(currentDate);\r\n                return currentDate;\r\n            });\r\n        } else {\r\n            setDate((prevDate) => {\r\n                let currentDate =new Date(prevDate);\r\n                if(parts[0]) currentDate.setHours(Number.parseInt(parts[0]))\r\n                if(parts[1]) currentDate.setMinutes(Number.parseInt(parts[1])) \r\n                if(parts[2]) currentDate.setSeconds(Number.parseInt(parts[2]))\r\n\r\n                if (props.onChange) props.onChange(currentDate);\r\n                return currentDate;\r\n            });\r\n        }\r\n    };\r\n\r\n    const showMode = (currentMode) => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    };\r\n\r\n    const showDatepicker = () => {\r\n        showMode('date');\r\n    };\r\n\r\n    const showTimepicker = () => {\r\n        showMode('time');\r\n    };\r\n\r\n    let timestring = date.toTimeString().split(\" \");\r\n    let timetstring = timestring[0] || \"lm:ao:yi\";\r\n    let timetzstring = timestring[2] || \"(UTC bro ka)\"\r\n    timestring = timetstring.substring(0, 5) + \" \" +timetzstring;\r\n\r\n    console.log( \"render show: \"+show+\", mode: \"+mode+\", \"+`${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`+ \" \"+`${date.getHours()}:${date.getMinutes()}` )\r\n\r\n    return (\r\n        <View style={s.container}>\r\n            <Text>Datum/Uhrzeit:</Text>\r\n            <View style={s.buttonwrapper}>\r\n                <Pressable onPress={showDatepicker} style={s.datebutton}><Text>{date.toDateString()}</Text></Pressable>\r\n                <Pressable onPress={showTimepicker} style={s.datebutton}><Text>{timestring}</Text></Pressable>\r\n            </View>\r\n            {show && (\r\n                mode==\"date\"?(\r\n                    React.createElement(\"input\", {type: \"date\", key: \"date\", onChange: (ev)=>onChange(ev,mode), value: date.getFullYear().toString().padStart(4, \"0\")+\"-\"+date.getMonth().toString().padStart(2, \"0\")+\"-\"+date.getDate().toString().padStart(2, \"0\")} )\r\n                )\r\n                : (\r\n                    React.createElement(\"input\", {type: \"time\", key: \"time\", onChange: (ev)=>onChange(ev,mode), value: date.getHours().toString().padStart(2, \"0\")+\":\"+date.getMinutes().toString().padStart(2, \"0\")} )\r\n                )\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst s = StyleSheet.create({\r\n    buttonwrapper: {\r\n        flexDirection: \"row\",  \r\n        borderColor: lightAccentColor, \r\n        borderWidth: 2,\r\n        borderRadius: 10, \r\n        backgroundColor: \"white\"\r\n    },\r\n\r\n    datebutton: {\r\n        flex: 1,\r\n        paddingVertical: 10,\r\n        borderRightColor: lightAccentColor,\r\n        borderRightWidth: 2,\r\n        alignItems: \"center\"\r\n    }\r\n})","import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { Button, ImageBackground, ScrollView, StyleSheet, Text, TextInput, View, Pressable, Dimensions, ImageSourcePropType, Image, Platform } from 'react-native';\r\nimport { Betrag, Card, interpret_cost_object, MoneyCard, RoundImage, SimpleCard, UserCard, UserMoneyCard } from './components';\r\nimport { accentColor, apiUrl, Identity, lightAccentColor, mutedAccentColor, mutedlightAccentColor, transparentWhite, urlFromUpload, WgAndUsers } from './constants';\r\nimport { useWebData } from './hooks';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport DateComp from './Date';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Sharing from 'expo-sharing';\r\n\r\n\r\nconst FinanceTab = createMaterialTopTabNavigator();\r\nconst FinanceStack = createStackNavigator();\r\n\r\nconst FinanceScreen = (props) => {\r\n  const {wg, users} = useContext(WgAndUsers);\r\n  const [rerenderKey, setRerenderKey] = useState(0);\r\n\r\n  function rerender() {\r\n    setRerenderKey((rerenderKey) => rerenderKey+1);\r\n  }\r\n\r\n  return (\r\n    <FinanceStack.Navigator initialRouteName=\"Finanzen\">\r\n      <FinanceStack.Screen name=\"Finanzen\">{(props) => {return <FinanceRootScreen key={rerenderKey} rerenderHandle={rerender} {...props}/>}}</FinanceStack.Screen>\r\n      <FinanceStack.Screen name=\"NewEntry\">\r\n        {(props) => {return <NewEntryScreen rerenderHandle={rerender} {...props}/>}}\r\n      </FinanceStack.Screen>\r\n      <FinanceStack.Screen name =\"ViewCost\" component={CostDetailScreen}/>\r\n      <FinanceStack.Screen name =\"HistoricBalanceCosts\" component={FinaceCostsScreen}/>\r\n    </FinanceStack.Navigator>\r\n  )\r\n}\r\n\r\nconst FinanceRootScreen = (props) => {\r\n  const {wg, users} = useContext(WgAndUsers);\r\n  const [login, setLogin] = useContext(Identity);\r\n  var [stats] = useWebData(\"/api/my_wg/costs/stats\", [], []);\r\n\r\n  useEffect ( () => {\r\n    let stat = stats.find((statt) => statt.user_id === login.user.id)\r\n    if ( stat  ) {\r\n      props.navigation.setOptions({\r\n        headerRight: (props) => <View style={{marginRight: 10}}><Betrag amount={stat.to_recieve-stat.to_pay}/></View>\r\n      })\r\n    }\r\n  }, [stats])\r\n\r\n  return (\r\n    <ImageBackground\r\n      blurRadius={5}\r\n      source={{ uri: urlFromUpload(wg.header_pic)}}\r\n      style={{ flex: 1, backgroundColor: \"rgba(37, 42, 82, 1)\" }}\r\n    >\r\n      <FinanceTab.Navigator initialRouteName=\"Einträge\" sceneContainerStyle={{backgroundColor: \"transparent\"}} screenOptions={{tabBarIndicatorStyle: {backgroundColor: accentColor}}}>\r\n        <FinanceTab.Screen name=\"Einträge\">{(pprops) => {\r\n          return( <FinaceCostsScreen {...pprops} rerenderHandle={props.rerenderHandle} canAddEntry/> );\r\n        }}</FinanceTab.Screen>\r\n        <FinanceTab.Screen name=\"Balance\">{(pprops) => {\r\n          return( <FinanceBalanceScreen {...pprops} rerenderHandle={props.rerenderHandle} users={users} stats={stats}/> );\r\n        }}</FinanceTab.Screen>\r\n        <FinanceTab.Screen name=\"Stats\" component={StatsScreen}/>\r\n      </FinanceTab.Navigator>\r\n    </ImageBackground>\r\n  )\r\n}\r\n\r\nconst StatsScreen = (props) => {\r\n  var [stats] = useWebData(\"/api/my_wg/costs/over_time/week\", [], []);\r\n\r\n  let fakedata=[0, 0];\r\n  let datasets = [\r\n    { key: \"i_recieved\", data: [], color: (opacity = 1) => `rgba(63, 252, 0, ${opacity})`, withShadow: false},\r\n    { key: \"i_paid\", data: [], color: (opacity = 1) => `rgba(252, 5, 5, ${Math.min(1,opacity+0.5)})`},\r\n    { key: \"wg_spending\", data: [], color: (opacity = 1) => `rgba(252, 132, 5,${Math.min(1,opacity+0.5)})`},\r\n    { key: \"my_spending\", data: [], color: (opacity = 1) => `rgba(89, 78, 252, ${Math.min(1,opacity+0.5)})`},\r\n  ]\r\n  let labels= [];\r\n\r\n  let statindex = 0;\r\n  let is_ready= false;\r\n  if( stats[0] && stats[0].week){\r\n    let weeknum = stats[0].week;\r\n    for (let i = 0; i<6; i++) {\r\n      let thisstat = stats[statindex];\r\n      if ( thisstat && thisstat.week === weeknum - i ) \r\n      {\r\n        datasets[3].data.push(thisstat.my_total_spending)\r\n        datasets[2].data.push(thisstat.total_unified_spending)\r\n        datasets[1].data.push(thisstat.i_paid)\r\n        datasets[0].data.push(thisstat.i_recieved)\r\n        labels.push(new Date(thisstat.time_bucket).toDateString().substring(4, 10));\r\n        statindex++;\r\n      } else {\r\n        datasets[0].data.push(0);\r\n        datasets[1].data.push(0);\r\n        datasets[2].data.push(0);\r\n        datasets[3].data.push(0);\r\n        labels.push(\"KW\"+String(weeknum-i))\r\n      }\r\n    }\r\n\r\n    labels.reverse();\r\n    datasets[0].data.reverse();\r\n    datasets[1].data.reverse();\r\n    datasets[2].data.reverse();\r\n    datasets[3].data.reverse();\r\n    is_ready = true;\r\n  }\r\n\r\n  return <ScrollView>\r\n<LineChart\r\n    data={{\r\n      labels: is_ready ? labels : [\"loading\"],\r\n      datasets: is_ready ? datasets : [{data:[0]}]\r\n      \r\n    }}\r\n    width={Dimensions.get(\"window\").width} // from react-native\r\n    height={400}\r\n    yAxisLabel=\"$\"\r\n    yAxisInterval={1} // optional, defaults to 1\r\n    chartConfig={{\r\n      backgroundColor: \"#ffffff\",\r\n      backgroundGradientFrom: \"#ffffff\", \r\n      backgroundGradientTo: \"#ffffff\",\r\n      propsForBackgroundLines: {\r\n        stroke: \"#ccc\"\r\n      },\r\n      //backgroundGradientFrom: \"#3d3d3d\",\r\n      //backgroundGradientTo: \"#654977\",\r\n      decimalPlaces: 2, // optional, defaults to 2dp\r\n      color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n      labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n      style: {\r\n        borderRadius: 16\r\n      },\r\n      propsForDots: {\r\n        r: \"6\",\r\n        strokeWidth: \"2\",\r\n        stroke: \"#42006b\"\r\n      },\r\n      useShadowColorFromDataset: true,\r\n      fillShadowGradientFromOpacity: 0.4,\r\n      fillShadowGradientToOpacity: 0\r\n    }}\r\n    bezier\r\n    style={{\r\n      marginVertical: 8,\r\n      borderRadius: 16\r\n    }}\r\n  />\r\n  <Text style={{backgroundColor: transparentWhite}}>Ausgaben der letzten 6 Wochen:{\"\\n\"}Enthält bereits ausgeglichene Einkäufe{\"\\n\"}\r\n    <Text style={{color: \"rgb(252, 132, 5)\"}}>Orange</Text> für die Gesamte Wg{\"\\n\"}\r\n    <Text style={{color: \"rgb(89, 78, 252)\"}}>Blau</Text> für deine Ausgaben (Summe aller Anteile){\"\\n\"}\r\n    <Text style={{color: \"#4F7B30\"}}>Grün</Text> für was du zurückbekommst/kamst {\"\\n  \"}(Für Einkäufe der Woche){\"\\n\"}\r\n    <Text style={{color: \"rgb(252, 5, 5)\"}}>Rot</Text> für was du den WGlern zahlst/zahltest{\"\\n  \"}(Für Einkäufe der Woche){\"\\n\"}\r\n  </Text>\r\n  <Text style={{backgroundColor: transparentWhite}}>{JSON.stringify(stats, undefined, 2)}</Text>\r\n  </ScrollView>\r\n}\r\n\r\nconst FinanceBalanceScreen = (props) => {\r\n  var [balances] = useWebData(\"/api/my_wg/costs/balance\", [], []);\r\n  var [error, set_error] = useState(false);\r\n  var [loading, setLoading] = useState(false);\r\n  const [login, setLogin] = useContext(Identity);\r\n\r\n  async function balanceOut() {\r\n    setLoading(true);\r\n    try {\r\n      var res = await fetch(apiUrl + \"/api/my_wg/costs/balance\", { \r\n        method: \"POST\", \r\n        headers: { 'Content-Type': \"application/json\",\r\n          \"Authorization\" : \"Bearer \"+login.token\r\n      } });\r\n      if ( res.ok ) {\r\n        console.log( \"New Balance Successful\");\r\n        if (props.rerenderHandle) props.rerenderHandle();\r\n      } else {\r\n        let text = await res.text();\r\n        set_error(text);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      set_error(err);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  //console.log(\"PROPS STATS\", props)\r\n  return (<ScrollView style={{flex:1}}>\r\n    <Text style={{fontSize:23, alignSelf:\"stretch\", padding: 10, backgroundColor:transparentWhite,fontWeight:\"bold\",textAlign:\"center\"}}>Derzeitiger Unterschied</Text>\r\n    {props.stats.map( (stat) => {\r\n      let user = props.users[stat.user_id];\r\n      //console.log(\"STAT\", stat)\r\n      return (<UserMoneyCard user={user} stat={stat} key={user.id}></UserMoneyCard>)\r\n    })}\r\n    <Button color={accentColor} disabled={loading} onPress={balanceOut} title=\"Abrechnen/Null setzen\"></Button>\r\n    {error && <Text>{JSON.stringify(error, undefined, 2)}</Text>}\r\n    <Text style={{fontSize:23, marginTop:20, alignSelf:\"stretch\", padding: 10, backgroundColor:transparentWhite,fontWeight:\"bold\",textAlign:\"center\"}}>Historische Abrechnungen</Text>\r\n    {balances.map((bal) => {\r\n      return <BalanceObject balance={bal} key={bal.id} navigation={props.navigation}/>\r\n    })}\r\n  </ScrollView>)\r\n}\r\n\r\nconst BalanceObject = (props) => {\r\n  let balance = props.balance;\r\n  const {wg, users} = useContext(WgAndUsers);\r\n  let user = users[String(balance.initiator_id)]||{};\r\n  let date = new Date(balance.balanced_on);\r\n\r\n  let i_paid = Number.parseFloat(balance.i_paid);\r\n  let i_recieved = Number.parseFloat(balance.i_recieved);\r\n  let my_total_spending = Number.parseFloat(balance.my_total_spending);\r\n  let total_unified_spending = Number.parseFloat(balance.total_unified_spending);\r\n\r\n  return (\r\n    <Card imgUrl={urlFromUpload(user.profile_pic)} imgSize={40}\r\n    title={<>\r\n        <Text numberOfLines={1}>{date.toDateString()}</Text>\r\n      </>}\r\n    text={<View> \r\n        <Text>Angeordnet von {user.name}</Text>\r\n        <View style={{flexDirection:\"row\", alignItems:\"center\"}}><Text>Ich gab </Text><Betrag amount={-my_total_spending} isWhite/><Text> aus.</Text></View>\r\n        <View style={{flexDirection:\"row\", alignItems:\"center\"}}><Text>Die WG gab </Text><Betrag amount={-total_unified_spending} isWhite/><Text> aus.</Text></View>\r\n      </View>}\r\n    onPress={() => {\r\n      if(props.navigation) props.navigation.push(\"HistoricBalanceCosts\", {balanceId: balance.id})\r\n    }}\r\n    >\r\n        <View style={{marginTop: 0, marginRight: 10}}><Text>total:</Text><Betrag amount={i_recieved-i_paid} isWhite/></View>\r\n    </Card>\r\n)\r\n}\r\n\r\nconst FinaceCostsScreen = (props) => {\r\n  let url = \"/api/my_wg/costs\";\r\n  if(props.route && props.route.params && props.route.params.balanceId) { url += \"?balance=\"+props.route.params.balanceId}\r\n\r\n  var [costs] = useWebData(url, [], []);\r\n  const {wg, users} = useContext(WgAndUsers);\r\n\r\n  return(\r\n  <><ScrollView style={{flex:1}}>\r\n      {costs.map((cost ) => {\r\n        return (<MoneyCard key={cost.id} cost={cost} users={users} onPress={() => {\r\n          props.navigation.push(\"ViewCost\", {cost, users})\r\n        }}/>);\r\n      })}\r\n  </ScrollView>\r\n  {props.canAddEntry && <View style={{backgroundColor: transparentWhite}}>\r\n    <Pressable \r\n      style={({ pressed }) => ({\r\n        backgroundColor: pressed?mutedlightAccentColor:accentColor, \r\n        paddingTop: pressed?10:5,\r\n        paddingBottom: pressed?0:5,\r\n        paddingStart: pressed?10:0,\r\n        margin: 5, marginHorizontal: 15, \r\n        borderRadius: 10,\r\n        borderWidth: 8,\r\n        borderColor: pressed?mutedlightAccentColor:accentColor,\r\n        borderTopColor: pressed?mutedAccentColor:lightAccentColor,\r\n        borderStartColor: pressed?mutedAccentColor:lightAccentColor,\r\n      })} \r\n      android_ripple={{color: \"transparent\"}}\r\n      onPress={() => {\r\n        props.navigation.push(\"NewEntry\")\r\n      }}\r\n    >\r\n      <Text style={{color: \"white\", textAlign: \"center\"}}>Neuer Eintrag</Text></Pressable>\r\n  </View>}\r\n  </>);\r\n}\r\n\r\nasync function imageToBlob(pickerResult) {\r\n  const blob = await new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.onload = function () {\r\n      resolve(xhr.response);\r\n    };\r\n    xhr.onerror = function () {\r\n      reject(new TypeError(\"Network request failed\"));\r\n    };\r\n    xhr.responseType = \"blob\";\r\n    xhr.open(\"GET\", pickerResult.uri, true);\r\n    xhr.send(null);\r\n  });\r\n  return blob\r\n}\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nconst Base64 = {\r\n  btoa: (input = '')  => {\r\n    let str = input;\r\n    let output = '';\r\n\r\n    for (let block = 0, charCode, i = 0, map = chars;\r\n    str.charAt(i | 0) || (map = '=', i % 1);\r\n    output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\r\n\r\n      charCode = str.charCodeAt(i += 3/4);\r\n\r\n      if (charCode > 0xFF) {\r\n        throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\r\n      }\r\n      \r\n      block = block << 8 | charCode;\r\n    }\r\n    \r\n    return output;\r\n  },\r\n\r\n  atob: (input= '') => {\r\n    let str = input.replace(/=+$/, '');\r\n    let output = '';\r\n\r\n    if (str.length % 4 == 1) {\r\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\r\n    }\r\n    for (let bc = 0, bs = 0, buffer, i = 0;\r\n      buffer = str.charAt(i++);\r\n\r\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\r\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\r\n    ) {\r\n      buffer = chars.indexOf(buffer);\r\n    }\r\n\r\n    return output;\r\n  }\r\n};\r\n\r\nasync function getAuthImage(uri, token) {\r\n  let [buffer, ctype] = await new Promise((accept, reject) => {\r\n    var req = new XMLHttpRequest();\r\n    req.open(\"GET\", uri, true);\r\n    req.setRequestHeader(\"Authorization\", \"Bearer \"+token);\r\n    req.responseType = \"arraybuffer\";\r\n\r\n    req.onload = function(event) {\r\n        var resp = req.response;\r\n        if(resp) {\r\n            accept([resp,req.getResponseHeader('Content-Type')]);\r\n        }\r\n    };\r\n\r\n    req.send(null);\r\n  });\r\n\r\n  var base64Flag = 'data:'+ctype+';base64,';\r\n\r\n  var binary = '';\r\n  var bytes = [].slice.call(new Uint8Array(buffer));\r\n\r\n  bytes.forEach((b) => binary += String.fromCharCode(b));\r\n\r\n  var imageStr = Base64.btoa(binary);\r\n\r\n  return [base64Flag + imageStr, ctype];\r\n}\r\n\r\nconst NewEntryScreen = (props) => {\r\n  const {wg, users} = useContext(WgAndUsers);\r\n  const [login, setLogin] = useContext(Identity);\r\n\r\n  const [error, set_error] = useState(\"\");\r\n  const [loading, set_loading] = useState(0);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"0.00\");\r\n  const [selUsers, setSelUsers] = useState({});\r\n  const [date, set_date] = useState(new Date());\r\n  const [image, set_image] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    let e = {};\r\n    for (let user of Object.values(users) ) {\r\n      e[user.id] = login.user.id === user.id;\r\n    }\r\n    setSelUsers(e);\r\n  }, []);\r\n  console.log(selUsers);\r\n\r\n  // sanitize amount\r\n  const onAmountChange = (amt) => {\r\n    if( typeof amt !== \"string\" ) return;\r\n\r\n    if( amt.match(/^[0123456789]*.*[0123456789]*$/) ) {\r\n      amt = amt.replace(/[^0123456789]/g, \"\")\r\n        .padStart(3, \"0\");\r\n      //console.log(\"STEP 1 => \"+amt)\r\n      \r\n      amt = amt.slice(0, amt.length-2) + \".\" + amt.slice(amt.length-2);\r\n      //console.log(\"STEP 2 => \"+amt)\r\n\r\n      amt = amt.replace(\"0\", \" \").trimStart().replace(\" \",\"0\").padStart(4,\"0\");\r\n      //console.log(\"STEP 3 => \"+amt)\r\n\r\n      setAmount(amt)\r\n    } else {\r\n      console.log(\"Ignored fool\")\r\n      setAmount(\"0.00\")\r\n    }\r\n  };\r\n  let amtf = Number.parseFloat(amount);\r\n  let nr_shares = Object.keys(selUsers).length;\r\n  let nr_othershares = nr_shares - (Object.keys(selUsers).includes(String(login.user.id)) ?1:0); \r\n\r\n  const onSubmit = async () => {\r\n    set_loading(1);\r\n    try {\r\n      let payload = JSON.stringify( { name, amount: Number.parseFloat(amount), added_on: date.toISOString(), \r\n        debtors: Object.entries(selUsers).map(e=>[Number.parseInt(e[0]), e[1]]) } );\r\n      console.log(payload);\r\n\r\n      var res = await fetch(apiUrl + \"/api/my_wg/costs\", { \r\n        method: \"POST\", \r\n        body: payload, \r\n        headers: { 'Content-Type': \"application/json\",\r\n          \"Authorization\" : \"Bearer \"+login.token\r\n      } });\r\n      if ( res.ok ) {\r\n        let json = await res.json();\r\n        console.log( \"New Entry successfull\", json );\r\n\r\n        if( image ){\r\n          try{\r\n            set_loading(2);\r\n            let filename = image.uri.split(\"?\")[0].split(\"/\").pop()||\"lmao.jpg\";\r\n            // Infer the type of the image\r\n            let match = /\\.(\\w+)$/.exec(filename);\r\n            let type = match ? `image/${match[1]}` : `image`;\r\n\r\n            const form = new FormData();\r\n            if (Platform.OS === \"web\"){\r\n              let blob =await imageToBlob(image);\r\n              if ( filename.split(\".\").length < 2)\r\n                filename += \".\" + blob.type.split(\"/\").pop();\r\n              form.append('receit',blob, filename);\r\n            }else\r\n              form.append('receit', {\r\n                name: filename, type, uri: image.uri\r\n              }, filename);\r\n            \r\n            var res = await fetch(apiUrl + \"/api/my_wg/costs/\"+json+\"/receit\", { \r\n              method: \"PUT\", \r\n              body: form, \r\n              headers: {\r\n                \"Authorization\" : \"Bearer \"+login.token,\r\n              }\r\n            });\r\n            if(!res.ok) {\r\n              set_loading(0);\r\n              let err = await res.text();\r\n              console.log(err)\r\n              set_error(err);\r\n              return \r\n            }\r\n          } catch(err) {\r\n            set_loading(0);\r\n            console.log(err);\r\n            set_error(err);\r\n            return;\r\n          }\r\n        }\r\n\r\n        props.rerenderHandle();\r\n        props.navigation.goBack();\r\n        set_loading(0)\r\n      } else {\r\n        let text = await res.text();\r\n        set_error(text);\r\n        set_loading(0)\r\n      }\r\n    } catch (err) {\r\n      set_error(err);\r\n      set_loading(0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    loading==2?<View style={{flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Eintrag eingerichtet: {\"\\n\"} Versuche nun Ahhang hochzuladen... {\"\\n\"} Einen Augenblick.. Fenster nicht schließen...\r\n      {error&&\"\\nFEHLER: Naja verkackt- kann man nichts dran ändern, \\n eintrag ist schon abgeschickt (schlechtes desin ik):\\nSag mir mal bescheid wa:\\n\"+JSON.stringify(error)}\r\n      </Text>\r\n    </View>:\r\n    (<ScrollView style={{margin: 10}} >\r\n        <View style={{flexDirection: \"row\", alignItems: \"center\"}} >\r\n          <TextInput style={{flex: 1, ...s.textfield}} placeholder='Beschreibung'  onChangeText={setName} value={name}></TextInput>\r\n          <TextInput style={{minWidth: 50, marginLeft: 5, ...s.textfield}} placeholder='0.00' keyboardType='numeric' onChangeText={onAmountChange} value={amount}></TextInput>\r\n          <Text>€</Text>\r\n        </View>\r\n        <DateComp onChange={set_date}/>\r\n        <Text>Beteiligte:</Text>\r\n        <View style={{flexDirection: \"row\", margin: 5, marginBottom: 20, flexWrap: 'wrap'}}>\r\n          {Object.values(users).map((user) => {\r\n            let selected = Object.keys(selUsers).includes(String(user.id));\r\n\r\n            return (<Pressable key={user.id} style={{ flexDirection: \"row\", margin: 5, height: 60, minWidth: 108, alignItems: \"center\", justifyContent: \"space-evenly\" ,\r\n            backgroundColor: selected?accentColor:\"white\" }}\r\n              onPress={() => {\r\n                setSelUsers((sel) => {\r\n                  let ee = {...sel, [user.id]: user.id==login.user.id};\r\n                  if (Object.keys(sel).includes(String(user.id))) delete ee[user.id];\r\n                  return ee;\r\n                })\r\n              }}\r\n            >\r\n              <RoundImage imgUrl={urlFromUpload(user.profile_pic)} imgSize={50} styleRing={{borderWidth: 3, borderColor: \"white\"}}></RoundImage> \r\n              <Text style={{color:selected?\"white\":\"black\"}}>{user.name}</Text>\r\n            </Pressable>);\r\n          })}\r\n        </View>\r\n\r\n        <Text>Anhang:</Text>\r\n        {image==false? (\r\n          <View style={{justifyContent:\"space-evenly\", flexDirection:\"row\"}}>\r\n            <Button title=\"Kamera\" color={accentColor} onPress={async () => {\r\n              let res = await ImagePicker.launchCameraAsync({quality: 1, exif: false, allowsEditing: true });\r\n              if(!res.cancelled) set_image(res);\r\n            }}/>\r\n            <Button title=\"Bibliothek\" color={accentColor} onPress={async () => {\r\n              let res = await ImagePicker.launchImageLibraryAsync({quality: 1, exif: false, allowsEditing: true });\r\n              if(!res.cancelled) set_image(res);\r\n            }}/></View>\r\n        ) : (<View><Button title=\"Entfernen\" color=\"red\" onPress={()=>set_image(false)}/><Image style={{flex:1, backgroundColor: \"grey\", minHeight: 400}} resizeMode=\"center\" source={{uri: image.uri}}/></View>)}\r\n\r\n        <View style={{borderBottomColor: 'black',borderBottomWidth: StyleSheet.hairlineWidth,}}/>\r\n        <Text>Du hast {amount}€ bezahlt.</Text>\r\n        <Text>Du bekommst <Betrag amount={amtf/nr_shares*(nr_othershares)}></Betrag> von den {nr_othershares} anderen Beteiligten zurück</Text>\r\n        <View style={{borderBottomColor: 'black',borderBottomWidth: StyleSheet.hairlineWidth, marginBottom:20}}/>\r\n        <Button title=\"Senden\" color={accentColor} disabled={loading!=0||!name||(!amtf>0)||nr_shares<1} onPress={onSubmit}></Button>\r\n        <Text>{JSON.stringify(error)}</Text>\r\n    </ScrollView>)\r\n  );\r\n}\r\n\r\nconst CostDetailScreen = (props) => {\r\n  let cost = props.route.params.cost;\r\n  let {my_gain, single_payment, amt, am_creditor} = interpret_cost_object(cost);\r\n\r\n  let users = props.route.params.users;\r\n  let [shares] = useWebData(\"/api/my_wg/costs/\"+cost.id+\"/shares\", [], false);\r\n  let date = new Date(cost.added_on).toString();\r\n\r\n  const [login, setLogin] = useContext(Identity);\r\n\r\n  let [[blob, ctype], setBlob] = useState([null,null]);\r\n  useEffect( () => {\r\n    let blobPromise = getAuthImage(urlFromUpload(cost.receit), login.token);\r\n    blobPromise.then((e) => {\r\n        console.log(\"Blob ready!\")\r\n        //console.log(e);\r\n        setBlob(e)\r\n    }, (err) => {\r\n      console.error(\"Couldn't get image blob:\", err);\r\n      setBlob([{error: true}, null])\r\n    });\r\n  }, [cost.receit, login])\r\n\r\n  const onPressImg = async () => {\r\n    if( blob && blob.error!==false ) {\r\n      if(await Sharing.isAvailableAsync()) {\r\n        try {\r\n\r\n          await Sharing.shareAsync(blob, {dialogTitle: \"Share Receit\", mimeType: ctype })\r\n        } catch (err) {\r\n          console.error(\"Couldn't share: \",err)\r\n        }\r\n      } else {\r\n        console.error(\"Sharing Unavailable\")\r\n      }\r\n    } else {\r\n      console.error(\"Blob nicht am start!\")\r\n    }\r\n  };\r\n\r\n  //console.log(urlFromUpload(cost.reciet));\r\n\r\n  let receitSource = {headers: { \"Authorization\": \"Bearer \"+login.token, \"Accept\": \"*/*\", \"Accept-Encoding\": \"gzip, deflate, br\" }, method: \"GET\", uri: urlFromUpload(cost.receit)};\r\n  console.log(receitSource);\r\n\r\n  return <ScrollView><MoneyCard key={cost.id} cost={cost} users={users}/><View style={{margin: 10}}>\r\n    \r\n    <Text>Datum: {date}</Text>\r\n    <Text style={{fontSize:20, marginTop:20, alignSelf:\"stretch\", backgroundColor:transparentWhite,fontWeight:\"bold\",textAlign:\"center\"}}>Anteile:</Text>\r\n    {shares.map((share) => {\r\n      let user = users[String(share.debtor_id)] || {name: \"????Ubkenannter Nuter?????\"};\r\n\r\n      let ret;\r\n      let ts=share.paid?{textDecorationLine:\"line-through\", color: \"grey\"}:{};\r\n      \r\n      if( cost.my_share.debtor_id === share.debtor_id ) {\r\n        ret=<><Text style={ts}>{user.name} übernimmt </Text><Betrag amount={-single_payment} strikethrough={share.paid}/></>\r\n      }else if( am_creditor) {\r\n        ret=<><Text style={ts}>{user.name} übernimmt </Text><Betrag amount={single_payment} strikethrough={share.paid}/></>\r\n      } else {\r\n        ret=<><Text style={ts}>{user.name} übernimmt </Text><Betrag amount={single_payment} strikethrough={true}/></>\r\n      }\r\n\r\n      return <View key={share.debtor_id} style={{flexDirection:\"row\", alignItems:\"center\"}}>{ret}{share.paid&&<Text> ✔gezahlt</Text>}</View>\r\n    })}\r\n    <View style={{flexDirection:\"row\", alignItems:\"center\"}}><Text>Du bekommst/zahlst noch: </Text><Betrag amount={my_gain}/></View>\r\n    {cost.receit && cost.receit.id && <>\r\n      <Text style={{fontSize:20, marginTop:20, alignSelf:\"stretch\", backgroundColor:transparentWhite,fontWeight:\"bold\",textAlign:\"center\"}}>Beleg:</Text>\r\n      <Pressable>\r\n        <Image style={{flex:1, backgroundColor: blob&&blob.error===true?\"red\":\"lightgray\", minHeight: 600}} \r\n        resizeMode=\"center\" \r\n        loadingIndicatorSource={require(\"./loadbar.png\")}\r\n        source={blob==null?require(\"./loadbar.png\"):blob.error===true?{uri: urlFromUpload({})}:{uri: blob}}\r\n        onError={(error) => console.error(\"Failed loading image: \", error.nativeEvent, error.nativeEvent.erro)}\r\n        onLoad={()=>console.log(\"Image pulled successfully.\")}\r\n        />\r\n      </Pressable>\r\n      \r\n    </>}\r\n  </View></ScrollView>\r\n}\r\n\r\nconst s = StyleSheet.create({\r\n  textfield: { \r\n    borderColor: lightAccentColor, \r\n    borderWidth: 2,\r\n    borderRadius: 10, \r\n    padding: 4,\r\n    backgroundColor: \"white\"\r\n  }\r\n})\r\n\r\n\r\nexport { FinanceScreen }","import { StatusBar } from 'expo-status-bar';\nimport { Button, ImageBackground, ScrollView, StyleSheet, Text, TextInput, View, Pressable, Image } from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n\nimport { StoreScreen } from './wg';\nimport { Betrag, MoneyCard, RoundImage, SimpleCard, UserMoneyCard } from './components';\nimport { accentColor, apiUrl, Identity, lightAccentColor, mutedAccentColor, mutedlightAccentColor, transparentWhite, urlFromUpload, WgAndUsers } from './constants';\nimport { useWebData } from './hooks';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { FinanceScreen } from './finance';\n\nimport * as ImagePicker from 'expo-image-picker';\n\nconst Tab = createBottomTabNavigator();\n/*\nexport function App() {\n  return <View>\n  <Image style={{flex:1, backgroundColor: \"gray\", minHeight: 600}} \n  resizeMode=\"center\" \n  source={\n    {headers: { \n      \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoX2FzIjoyLCJhdWQiOiJVU0VSIiwiZXhwIjoxNjk5MTY3NzEyLCJpYXQiOjE2Njc2MTAxMTIsImlzcyI6IndnLWFwaSB2MC4xLjAgYnkgS2FydG9ucmFkIDxoaUBrYXJ0b25yYWQuZGU-In0.7CkNG7wywPfk_Lk6FCYRYBmae4j44jmp1UypPwDs-Rw\",\n    }, \n    uri: apiUrl+\"/uploads/11.jpeg\"}}\n  /></View>\n}*/\n\nexport function App() {\n  const [initialized, set_initialized] = useState(false);\n  const [login, setLogin] = useState(false);\n\n  console.log(\"APP LVL RD: \", initialized, login);\n\n  function ssetLogin(e) {\n    //console.log(e);\n    setLogin((oldLogin) => {\n      let wert = e;\n      if(typeof e==\"function\") {\n        console.log(\"Lmao function?\")\n        wert = e(oldLogin);\n      }\n      saveData(wert);\n      return wert;\n    });\n  }\n\n  async function saveData(d) {\n    try {\n      const jsonValue = JSON.stringify(d)\n      await AsyncStorage.setItem('@login_data', jsonValue);\n      console.log(\"Login Value saved!\")\n    } catch (e) {\n      console.error(\"Error saving value in AsyncStorage: \", e)\n    }\n  }\n\n  const load = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@login_data')\n      let wert =  jsonValue != null ? JSON.parse(jsonValue) : null;\n      if( typeof wert == \"object\" && wert !== null) {\n        console.log(\"Successfully fetched login val!\");\n        setLogin(wert);\n      } else {\n        console.log(\"Successfully fetched the realization that user is logged out!\");\n        set_initialized(true); \n      }\n\n    } catch(e) {\n      // error reading value\n      console.error(\"Error getting login val: \",e)\n      set_initialized(true); // ohne login wert reinzugeben\n      return;\n    }\n  }\n\n  useEffect(() => {\n    if(login && !initialized) {\n      set_initialized(true)\n    }\n  }, [login,initialized])\n\n\n  useEffect(() => {\n    load()\n  }, []);\n\n  if( !initialized ) {\n    \n    return <View style={{flex: 1, alignItems: \"center\", justifyContent:\"center\"}}><Text>Lädt login token...</Text></View>\n  }\n\n  return (\n    \n    <Identity.Provider value={[login, ssetLogin]}>\n      <NavigationContainer>\n        { login!=false ? ( \n          <Main/>\n        ): (\n          <LoginFlow/>\n        )}\n      </NavigationContainer>\n    </Identity.Provider>\n  );\n}\n\nconst LoginFlowStack = createStackNavigator();\n\nfunction LoginFlow() {\n  return (\n    <LoginFlowStack.Navigator initialRouteName='Start' screenOptions={{header: ()=>{return false} }}>\n      <LoginFlowStack.Screen name='Start' component={LoginFlowStart}></LoginFlowStack.Screen>\n      <LoginFlowStack.Screen name='ChooseWGUser' component={LoginFlowChooseWGUser}></LoginFlowStack.Screen>\n      <LoginFlowStack.Screen name='AsUser' component={LoginFlowAsUser}></LoginFlowStack.Screen>\n    </LoginFlowStack.Navigator>\n  );\n}\n\nfunction LoginFlowStart({navigation}) {\n  const [wg_url, set_wg_url] = useState(\"\");\n  console.log(wg_url);\n\n  return (\n    <View style={s.container}>\n      <Text style={{fontSize: 32}}>Hallo!</Text>\n      <Text>Gebe das Kürzel deiner WG an...</Text>\n      <TextInput placeholder='z.b. wg-von-heinz' style={s.input} value={wg_url} onChangeText={set_wg_url}></TextInput>\n      <Button title='Anmelden' onPress={() => navigation.push(\"ChooseWGUser\", {wg_url})}></Button>\n    </View>);\n}\n\nfunction LoginFlowAsUser (props) {\n  const [psswd, set_psswd] = useState(\"\");\n  const [loading, set_loading] = useState(false);\n  const [error, set_error] = useState(null);\n  let user = props.route.params.user || {};\n\n  const [login, setLogin] = useContext(Identity);\n\n  return (\n    <View style={s.container}>\n      <RoundImage imgSize={200} style={s.headerImg} styleRing={{borderColor: \"afb1cc\", borderWidth: 7}} imgUrl={urlFromUpload(user.profile_pic)}></RoundImage>\n      <Text style={{fontSize: 32}}>{user.name}<Text style={{color: \"rgba(0, 0, 0, 0.48)\"}}>- @{user.username}</Text> </Text>\n      <Text>{error?(\"AHA! UNfug also? (Gab fehler:)\\n\"+error):\"NA fug?! stimmt das denn auch? Gib mal Passwort ran jetzt\"}</Text>\n      <TextInput placeholder='darkest secret (i mean prlly one of the lightest actually)' style={s.input} value={psswd} onChangeText={set_psswd}></TextInput>\n      <Button disabled={loading} title='Anmelden' onPress={async (ev) => {\n        set_loading(true);\n        //console.log(\"LOGIN\", user, psswd)\n        try {\n          var res = await fetch(apiUrl + \"/auth/login\", { \n            method: \"POST\", \n            body: JSON.stringify( { username: user.username, password: psswd } ), \n            headers: { 'Content-Type': \"application/json\" } });\n          if ( res.ok ) {\n            let json = await res.json();\n            console.log( \"LOGIN successful\", json );\n\n\n\n            setLogin({ ...json, user})\n          } else {\n            let text = await res.text();\n            set_error(text);\n          }\n        } catch (err) {\n          set_error(err);\n        }\n        set_loading(false);\n      }}></Button>\n    </View>);\n}\n\nfunction LoginFlowChooseWGUser(props) {\n  return <StoreScreen onUserPress={(user) => {\n    props.navigation.push(\"AsUser\", {user});\n  }} {...props}/>\n}\n\nfunction Main() {\n  const [wg] = useWebData(\"/api/my_wg\", {\n        name: \"WG\",\n        description: \"Loading...\",\n        profile_pic: null,\n        header_pic: null\n    }, {\n        name: \"FEHLER!!\",\n        description: \"Konnte auf diese WG nicht zugreifen!\"\n    });\n\n    const [users] = useWebData(\"/api/my_wg/users\", [], [{\n        name: \"FEHLER!\",\n        username: \"Halt\",\n        id: -1\n    }]);\n\n    let userDict = {};\n    users.forEach((user) =>{\n      userDict[user.id] = user;\n    })\n\n  return (\n    <WgAndUsers.Provider value={{wg, users: userDict}}>\n      <Tab.Navigator screenOptions={{\n        tabBarShowLabel: false\n      }}>\n          <Tab.Screen name=\"Home\" component={HomeScreen} options={{\n            tabBarIcon: ({focused: f}) => (<Icon name=\"home\" size={30} color={f? accentColor : mutedAccentColor} />),\n            headerShown: false\n          }}/>\n          <Tab.Screen name=\"Finance\" component={FinanceScreen} options={{\n            tabBarIcon: ({focused: f}) => (<Icon name=\"money\" size={30} color={f? accentColor : mutedAccentColor} />),\n            headerShown: false\n          }}/>\n          <Tab.Screen name=\"Setting\" component={SettingScreen} options={{\n            tabBarIcon: ({focused: f}) => (<Icon name=\"gears\" size={30} color={f? accentColor : mutedAccentColor} />)\n          }} />\n      </Tab.Navigator>\n    </WgAndUsers.Provider>\n  );\n}\n\nconst s = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    borderColor: '#757575',\n    borderRadius: 10,\n    borderWidth: 2,\n    padding: 5,\n    alignSelf: 'stretch',\n    margin: 20\n  }\n});\n\n\nconst HomeScreen = (props ) => {\n  return <StoreScreen {...props}></StoreScreen>\n}\n\nfunction ImagePickerrrr(props) {\n  const [image, setImage] = useState(null);\n\n  const pickImage = async () => {\n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: props.aspect || [1,1],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled && props.setImage) {\n      props.setImage(result.uri);\n    }\n  };\n\n  return (\n    <Pressable onPress={pickImage}>\n      {props.children}\n    </Pressable>\n  );\n}\n\nconst SettingScreen = (props) => {\n  const [login, setLogin] = useContext(Identity);\n\n  return <View><Text>Settings</Text>\n    {/*<UserForm></UserForm>\n\n    <Text style={{fontSize:20, marginTop:20, alignSelf:\"stretch\", backgroundColor:transparentWhite,fontWeight:\"bold\",textAlign:\"center\"}}>WG</Text>\n    <TextInput placeholder=\"WG Name\"/>\n    <TextInput placeholder=\"/url\"/>\n    <TextInput multiline={true} placeholder=\"Beschreibung\"/>\n    <Text>Header:</Text>\n    <ImagePickerrrr/>\n    <Text>Profile_pic:</Text>\n    <ImagePickerrrr/>*/}\n\n    <Button title=\"ABMELDEN\" color=\"red\" onPress={()=>{\n      setLogin(false)\n    }}></Button>\n  </View>\n}\n\nconst UserForm = (props) => {\n  let [login] = useContext(Identity)\n  let [ppic, setPpic] = useState(urlFromUpload(login.user.profile_pic));\n\n  return <View>\n    <Text style={{fontSize:20, marginTop:20, alignSelf:\"stretch\", backgroundColor:transparentWhite,fontWeight:\"bold\",textAlign:\"center\"}}>User</Text>\n    <TextInput placeholder={login.user.name}/>\n    <TextInput placeholder={login.user.username}/>\n    <TextInput multiline={true} placeholder={login.user.bio}/>\n    <Text>Profile_pic:</Text>\n    <ImagePickerrrr setImage={setPpic}>\n      <RoundImage imgSize={300} imgUrl={ppic}></RoundImage>\n    </ImagePickerrrr>\n  </View>\n}","import 'react-native-gesture-handler'; // why\r\nimport {App as Lmao} from './src/App'\r\n\r\nexport default function App(props) {\r\n    return ( <Lmao {...props}/> );\r\n}"],"sourceRoot":""}